@model RegisterVehicleViewModel

@{
    var userName = ViewData["CurrentUser"];
    var brands = Model.Brands;
}

<!-- customer index page -->
<div class="d-flex flex-column justify-content-start" style="height:100%;">

    <!-- customer nav bar -->
    <partial name="_EmployeeNavBarPartial" model="@userName" area-name= />

    <div id="matchingNames" class="dynamicList "></div>

    <div class="container d-flex gap-4 mt-5">

        <div class="container m-auto bg-light">
            <a asp-area="employee" asp-controller="Home" asp-action="Index">BACK</a>

            <form id="vehicle-create-form" asp-area="Employee" asp-controller="Vehicles" asp-action="RegisterVehicle" asp-route-brandId="" asp-route-modelId="" class="d-flex flex-column gap-4 p-4" method="post">
                <div class="d-flex flex-column form-group gap-2">
                    <label>Vehicle Brand</label>
                    <select name="brandId" id="brandSelect" type="text" autocomplete="off" class="form-control" placeholder="Enter brand" required></select>
                    <span></span>
                </div>
                <div class="d-flex flex-column form-group gap-2">
                    <label>Vehicle Model</label>
                    <select name="modelId" id="modelSelect" type="text" autocomplete="off" class="form-control" placeholder="Enter model" required></select>
                    <span></span>
                </div>
                <div class="d-flex flex-column form-group gap-2">
                    <label asp-for="@Model.CreationYear">Production Year</label>
                    <input asp-for="@Model.CreationYear" type="text" class="form-control" placeholder="Enter year" required>
                    <span asp-validation-for="@Model.CreationYear"></span>
                </div>
                <div class="d-flex flex-column form-group gap-2">
                    <label asp-for="@Model.VIN">VIN Number</label>
                    <input asp-for="@Model.VIN" type="text" class="form-control" placeholder="Enter vin" required>
                    <span asp-validation-for="@Model.VIN"></span>
                </div>
                <div class="d-flex flex-column form-group gap-2">
                    <label asp-for="@Model.LicensePlate">License Plate</label>
                    <input asp-for="@Model.LicensePlate" type="text" class="form-control" placeholder="Enter license plate number" required>
                    <span asp-validation-for="@Model.LicensePlate"></span>
                </div>
                <div class="d-flex flex-column form-group gap-2">
                    <label asp-for="@Model.CustomerEmail">Customer email</label>
                    <input asp-for="@Model.CustomerEmail" type="email" class="form-control" aria-describedby="emailHelp" placeholder="Link to customer" required>
                    <span asp-validation-for="@Model.CustomerEmail"></span>
                </div>
                <div class="d-flex mt-4">
                    <button type="submit" class="btn btn-primary">Create</button>
                </div>
            </form>
        </div>

        <!-- REGISTER NEW BRAND AND MODEL -->
        <div id="brand-create-form" class="container d-flex bg-light" style="width:50%;">
            <form asp-area="Employee" asp-controller="Vehicles" asp-action="AddVehicleBrand" class="d-flex flex-column gap-4 p-4" method="post">
                <div class="d-flex flex-column form-group gap-2">
                    <label asp-for="@Model.RegisterBrand">Vehicle Brand</label>
                    <input asp-for="@Model.RegisterBrand" id="createBrandInput" type="text" class="form-control" autocomplete="off" placeholder="Enter brand" required>
                    <span asp-validation-for="@Model.RegisterBrand"></span>
                </div>
                <div class="d-flex flex-column form-group gap-2">
                    <label asp-for="@Model.RegisterModel">Vehicle Model</label>
                    <input asp-for="@Model.RegisterModel" id="createModelInput" type="text" class="form-control" autocomplete="off" placeholder="Enter model" required>
                    <span asp-validation-for="@Model.RegisterModel"></span>
                </div>
                <div class="d-flex mt-4">
                    <button type="submit" class="btn btn-primary">Create</button>
                </div>
            </form>

            <div class="p-4">
                @{
                    foreach (var brand in brands)
                    {
                        <div>
                            @brand.Name
                        </div>

                        foreach (var vehicleModel in brand.Models)
                        {
                            <div>
                                --- @vehicleModel.Name
                            </div>
                        }
                    }
                }
            </div>
        </div>

    </div>
</div>

<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
<script src="~/js/dynamicList.js" asp-append-version="true"></script>

<script>

    $(document).ready(function () {

        var brandsDict = @Html.Raw(Json.Serialize(@Model.Brands.Select(brand => brand))); //.OrderBy(name => name.Name)));
        var brandData = {};
        brandsDict.forEach(function (brand) {
            var modelsData = {};
            brand.models.forEach(function (m) {
                modelsData[m.name] = m.id;
            });
            var data = {
                "id": brand.id,
                "models": modelsData
            };
            brandData[brand.name] = data;
        });

        // Populate brand dropdown
        var brandSelect = $("#brandSelect");
        for (var brandName in brandData) {
            if (brandData.hasOwnProperty(brandName)) {
                // Use the id as a value, but the brand name as a display name
                // But how to use the selected option name below, to get the element and populate the models in the models select
                brandSelect.append($("<option></option>").attr("value", brandData[brandName].id).text(brandName));
            }
        }
        // Event listener for brand selection
        brandSelect.on("change", function () {
            var selectedBrandId = $(this).find("option:selected").text(); // Now it gets the brand ID
            var modelSelect = $("#modelSelect");

            modelSelect.empty();

            console.log(selectedBrandId);

            if (brandData.hasOwnProperty(selectedBrandId)) {

                var models = brandData[selectedBrandId].models;
                for (var modelName in models) {
                    if (models.hasOwnProperty(modelName)) {
                        modelSelect.append($("<option></option>").attr("value", models[modelName]).text(modelName));
                    }
                }
            }
        });

        // Trigger the brand dropdown change event so we get the model list populated
        brandSelect.trigger("change");

        $("#vehicle-create-form").submit(function () {
            var brandSelectValue = $("#brandSelect").val();
            var modelSelectValue = $("#modelSelect").val();

            console.log(1, brandData[brandSelectValue].id);
            console.log(2, brandData[brandSelectValue].id);

            if (brandData.hasOwnProperty(brandSelectValue) && brandData[brandSelectValue].models.hasOwnProperty(modelSelectValue)) {
                $("#brandSelect").val(brandData[brandSelectValue].id);
                $("#modelSelect").val(brandData[brandSelectValue].models[modelSelectValue]);
            }

            return true;
        });

        // var namesArray = @Html.Raw(Json.Serialize(@Model.Brands.Select(brand => brand.Name).OrderBy(name => name)));
        var namesArray = Object.keys(brandData).sort();

        $("#createBrandInput").on("input", function () {
            displayMatchingNames(namesArray, "#createBrandInput", "#matchingNames");
        });

        var modelsArray = [];

        for (var brandName in brandData) {
            if (brandData.hasOwnProperty(brandName)) {
                var brand = brandData[brandName];
                var brandModels = Object.keys(brand.models);
                modelsArray = modelsArray.concat(brandModels);
            }
        }

        $("#createModelInput").on("input", function () {
            displayMatchingNames(modelsArray, "#createModelInput", "#matchingNames");
        });

        $(document).on("click", function (e) {
            if (!$(e.target).closest("#matchingNames").length) {
                $("#matchingNames").hide();
            }
        });
    });
</script>