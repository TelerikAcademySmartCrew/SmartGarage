@model SmartGarage.Models.LocationLists;

@{
    ViewData["Title"] = "Home Page";
    var serviceLocation = Model.ServiceLocation;
}

<div class="text-center">
    <h1 class="display-4">Welcome</h1>
    <p>Learn about <a href="https://docs.microsoft.com/aspnet/core">building Web apps with ASP.NET Core</a>.</p>
</div>


@* <div>
    <h2>Car Brands</h2>
    <div id="carData"></div>
</div>
 *@

<div class="jumbotron">
    <h2>MAP INTEGRATION</h2>
</div>

<div class="row">
    <div class="col-md-12 map">
        <div id="myMap" style="width:100%; height:610px;"></div>
        @* <div id="myMap" style="position:relative;width:600px;height:400px;"></div> *@
    </div>
</div>


@section scripts {

    <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
    <script type='text/javascript' src='https://www.bing.com/api/maps/mapcontrol?branch=release&callback=loadMapScenario' async defer></script>
    <script type="text/javascript" src="https://www.bing.com/api/maps/mapcontrol?callback=GetMap&key=Your_Bing_Maps_API_Key" async defer></script>

    <script type="text/javascript">

        var map;
        var Your_Bing_Maps_API_Key = 'AtAzZkqol01uNa6hbxC7wpkcr8_S7eTLa62DuhDRzbk6QbtJae0hAx9sCbLuCZBF';
        function GetMap() {
            map = new Microsoft.Maps.Map('#myMap', {
                credentials: Your_Bing_Maps_API_Key
            });
        }

        // Create the infobox for the pushpin
        var infobox = null;

        //declare addMarker function
        var pid = @serviceLocation.LocationId.ToString();
        var latitude = @serviceLocation.Latitude.ToString();
        var longitude = @serviceLocation.Longitude.ToString();
        var title = 'SmrtGarage'; // @serviceLocation.Title;
        var description = 'SmrtGarage'; //@serviceLocation.Description;

        function addMarker(latitude, longitude, title, description) {
            var location = new Microsoft.Maps.Location(latitude, longitude);
            var marker = new Microsoft.Maps.Pushpin(location, { color: 'green' });

            infobox = new Microsoft.Maps.Infobox(marker.getLocation(), {
                visible: true
            });

            marker.metadata = {
                title: title,
                description: description
            };

            Microsoft.Maps.Events.addHandler(marker, 'mouseout', hideInfobox);
            Microsoft.Maps.Events.addHandler(marker, 'mouseover', showInfobox);

            infobox.setMap(map);
            map.entities.push(marker);
            marker.setOptions({ enableHoverStyle: true });

            // Focus the map on the added marker
            map.setView({ center: location, zoom: 10 });
        };

        function showInfobox(e) {
            if (e.target.metadata) {
                infobox.setOptions({
                    location: e.target.getLocation(),
                    title: e.target.metadata.title,
                    description: e.target.metadata.description,
                    visible: true
                });
            }
        }

        function hideInfobox(e) {
            infobox.setOptions({ visible: false });
        }

    </script>
}